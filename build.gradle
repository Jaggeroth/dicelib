import org.apache.tools.ant.filters.ReplaceTokens
import java.text.SimpleDateFormat
import org.ajoberstar.grgit.*



apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'application'
apply plugin: 'maven'

sourceCompatibility = 1.7
targetCompatibility = 1.7


version = getVersionName()

ext.repo = Grgit.open(project.file('.'))




task wrapper(type: Wrapper) {
    gradleVersion='2.1'
}

install {
    repositories.mavenInstaller {
        pom.version = project.version;
        pom.artifactId = 'dicelib';
        pom.groupId = 'net.rptools.dicelib';
    }
}



buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.11.2'
    }
}


dependencies {
    compile 'rhino:js:1.6R5'
    compile 'antlr:antlr:2.7.6'
    compile 'net.rptools.parser:parser:1.1.b24'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

ext.compileDate = new Date();
ext.yyyymmdd = (new SimpleDateFormat('yyyyMMDD')).format(ext.compileDate);


repositories {
    mavenCentral()
    maven {
        url = 'http://maptool.craigs-stuff.net/repo/'
    }
}


/*
 * Gets the version name from the latest Git tag
 */

def getVersionName() {

    if (project.hasProperty('buildVersion')) {
        return buildVersion
    } else {
        def repo = Grgit.open(project.file('.'))
        def tagName = repo.tag.list()[0].fullName.replace('refs/tags/', '')
        def tagCommit = repo.tag.list()[0].commit.id
        def headCommit = repo.head().id
        def headAbbrvId = repo.head().abbreviatedId

        if (tagCommit == headCommit) {
            return tagName
        } else {
            return tagName + '-SNAPSHOT'
        }
    }
}

findbugs {
    ignoreFailures = true
    toolVersion = '3.0.0'
    effort = 'max'
    sourceSets = []  // Empty source set so it wont run during build/check
}

pmd {
    ignoreFailures = true
    sourceSets = []  // Empty source set so it wont run during tebuild/check
}



task showBuildVersion() << {
    println 'Build Version Number = ' + project.version
}

jar {
    manifest {
        attributes 'Implementation-Title': 'dicelib',
                   'Implementation-Version': project.version
    }
}
