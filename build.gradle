import java.text.SimpleDateFormat

buildscript {
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.13.0"
    }

    repositories {
        mavenCentral()
    }
}

// Access Git info from build script
plugins {
    id "org.ajoberstar.grgit" version "3.0.0"
}


apply plugin: 'java-library'
apply plugin: 'findbugs'
apply plugin: 'com.diffplug.gradle.spotless'


sourceCompatibility = 10
targetCompatibility = 10

// Custom properties
ext {
    // Get tag and commit info from Git to use for version numbering
    def repo = org.ajoberstar.grgit.Grgit.open(currentDir: file('.'))
    def head = repo.head()
    def tags = repo.tag.list().find {
        it.commit == head
    }

    if (tags) {
        tagVersion = tags.getName()
    }

    revision = head.abbreviatedId
    revisionFull = head.id

//    println 'Configuring for ' + project.name + " " + tagVersion + " by " + vendor
}


spotless {
    java {
        eclipseFormatFile 'build-resources/eclipse.prefs.formatter.xml'
    }
}


configurations {
    deployerJars
}


dependencies {
    compile 'rhino:js:1.6R5'
    compile 'antlr:antlr:2.7.6'
    compile 'net.rptools.parser:parser:1.1.b24'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

ext.compileDate = new Date();
ext.yyyymmdd = (new SimpleDateFormat('yyyyMMDD')).format(ext.compileDate);


repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'http://maptool.craigs-stuff.net/repo/'
    }
}


/*
 * Gets the version name from the latest Git tag
 */

def getVersionName() {


    if (project.hasProperty('buildVersion')) {
        return buildVersion
    } else {
        String vtxtVersionNo = new File('build-resources/version.txt').text.trim()

        return vtxtVersionNo
    }
}

findbugs {
    ignoreFailures = true
    toolVersion = '3.0.0'
    effort = 'max'
    sourceSets = []  // Empty source set so it wont run during build/check
}



jar {
    manifest {
        attributes 'Implementation-Title': 'dicelib',
                   'Implementation-Version': project.version
    }
}

